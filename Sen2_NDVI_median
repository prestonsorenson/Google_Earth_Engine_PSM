// Sentinel-2

// Filter an image collection by date and region to make a
// median pixel composite.
//
// See also: ClippedComposite, which crops the output image
// instead of filtering the input collection.

// Filter to only include images within a defined area.
var polygon = ee.Geometry.Polygon({
  coords: [[[-110.00, 49.00], [-110.00, 55.00], [-101.00, 55.00], [-111.00, 49.00]
  ]],
  geodesic: false
});


/**
 * Function to mask clouds using the Sentinel-2 QA band
 * @param {ee.Image} image Sentinel-2 image
 * @return {ee.Image} cloud masked Sentinel-2 image
 */
function maskS2clouds(image) {
  var qa = image.select('QA60');

  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));

  return image.updateMask(mask).divide(10000);
}

var fill = function(image){
                var filled1a = image.focal_mean(2, 'square', 'pixels', 1).blend(image);
                return filled1a.set('system:time_start',image.get('system:time_start'));
};


// Create a Sentinel 2 composite for Spring of 2019, and filter by
// the bounds of the FeatureCollection.   
var collection = 
    ee.ImageCollection('COPERNICUS/S2_SR')
    .filter(ee.Filter.calendarRange(2017,2022,'year'))
    .filterBounds(polygon)
    .map(maskS2clouds)
    ;
    
// Function to calculate and add an NDVI band
var addNDVI = function(image) {
return image.addBands(image.normalizedDifference(['B8', 'B4']));
};

//seperate monthly
var collection = collection.map(addNDVI);

//get median per month
var NDVImed_5=collection.filter(ee.Filter.calendarRange(5,5,'month')).select(['nd']).median().rename('NDVI_5').set("system:id", "t5").toFloat();
var NDVImed_6=collection.filter(ee.Filter.calendarRange(6,6,'month')).select(['nd']).median().rename('NDVI_6').set("system:id", "t6").toFloat();
var NDVImed_7=collection.filter(ee.Filter.calendarRange(7,7,'month')).select(['nd']).median().rename('NDVI_7').set("system:id", "t7").toFloat();
var NDVImed_8=collection.filter(ee.Filter.calendarRange(8,8,'month')).select(['nd']).median().rename('NDVI_8').set("system:id", "t8").toFloat();
var NDVImed_9=collection.filter(ee.Filter.calendarRange(9,9,'month')).select(['nd']).median().rename('NDVI_9').set("system:id", "t9").toFloat();
var NDVImed_10=collection.filter(ee.Filter.calendarRange(10,10,'month')).select(['nd']).median().rename('NDVI_10').set("system:id", "t10").toFloat();
var NDVImed=collection.filter(ee.Filter.calendarRange(5,10,'month')).select(['nd']).median().rename('NDVI_5_10').set("system:id", "t5_10").toFloat();

//combine bands
var NDVImed = NDVImed.addBands([NDVImed_5, NDVImed_6,NDVImed_7, NDVImed_8, NDVImed_9, NDVImed_10]);

//get min - max
var NDVImax = NDVImed.reduce(ee.Reducer.max());
var NDVImin = NDVImed.reduce(ee.Reducer.min());

var NDVI_min_max = NDVImax.subtract(NDVImin);

//get which month had max NDVI
//create constants equal to the month as a band for the image collection
var month_5=ee.Image.constant(5).toFloat();
var month_6=ee.Image.constant(6).toFloat();
var month_7=ee.Image.constant(7).toFloat();
var month_8=ee.Image.constant(8).toFloat();
var month_9=ee.Image.constant(9).toFloat();
var month_10=ee.Image.constant(10).toFloat();

var NDVImed_5_month=NDVImed_5.addBands(month_5).rename(['NDVI', 'month']);
var NDVImed_6_month=NDVImed_6.addBands(month_6).rename(['NDVI', 'month']);
var NDVImed_7_month=NDVImed_7.addBands(month_7).rename(['NDVI', 'month']);
var NDVImed_8_month=NDVImed_8.addBands(month_8).rename(['NDVI', 'month']);
var NDVImed_9_month=NDVImed_9.addBands(month_9).rename(['NDVI', 'month']);
var NDVImed_10_month=NDVImed_10.addBands(month_10).rename(['NDVI', 'month']);


var all_months = ee.ImageCollection([NDVImed_5_month, NDVImed_6_month, NDVImed_7_month, NDVImed_8_month, NDVImed_9_month, NDVImed_10_month]);

var max_month = all_months.reduce(ee.Reducer.max(2)).rename('max', 'max_t_step').select(['max_t_step']);

var max_month = max_month.toFloat();

//Add calculated bands
var NDVImed = NDVImed.addBands(NDVI_min_max).rename('Max_Min');

//add standard deviation of NDVI
var NDVI_sd = collection.filter(ee.Filter.calendarRange(5,10,'month')).select(['nd']).reduce(ee.Reducer.stdDev()).rename('NDVI_sd').toFloat();
var NDVImed = NDVImed.addBands(NDVI_sd);

var NDVImed = NDVImed.addBands(max_month);

// Create palettes for display of NDVI
var ndvi_pal = ['#d73027', '#f46d43', '#fdae61', '#fee08b', '#d9ef8b',
'#a6d96a'];

// Display NDVI results on map
Map.addLayer(NDVI_min_max.clip(polygon), {min:0, max:0.5, palette: ndvi_pal}, 'NDVI Max - Min');
Map.addLayer(NDVI_sd.clip(polygon), {min:0, max:0.3, palette: ndvi_pal}, 'NDVI SD');
Map.addLayer(max_month.clip(polygon), {min:5, max:10, palette: ndvi_pal}, 'Max Month');

// Export the image, specifying scale and region.
Export.image.toDrive({
image: NDVImed, //replace with your image name variable
description: 'sk_sen2_ndvi_median',
scale: 10,
maxPixels: 1e12,
region: polygon, //polygon name that you have drawn at step 1
folder:'sk_sen2_ndvi_median',
crs: "EPSG:26913"
});
