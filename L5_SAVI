// Landsat 5

// Filter an image collection by date and region to make a
// median pixel composite.
//
// See also: ClippedComposite, which crops the output image
// instead of filtering the input collection.

// Filter to only include images within a defined area.
var polygon = ee.Geometry.Polygon({
  coords: [[[-110.00, 49.00], [-110.00, 55.00], [-101.00, 55.00], [-101.00, 49.00]
  ]],
  geodesic: false
});

//Cloud Mask
/**
 * Function to mask clouds based on the pixel_qa band of Landsat SR data.
 * @param {ee.Image} image Input Landsat SR image
 * @return {ee.Image} Cloudmasked Landsat image
 */
var cloudMaskL457 = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};

// Create a Landsat 5 composites filter by
// the bounds of the FeatureCollection.

var collection = 
    ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
    .filter(ee.Filter.calendarRange(1984,1995,'year'))
    .filter(ee.Filter.calendarRange(7,8,'month'))
    .filterBounds(polygon)
    .map(cloudMaskL457);
    
// Function to calculate and add an ARI band

// Function to calculate and add an ARI band
var addSAVI = function(image) {
return image.addBands(image.expression(
      '((1.5)*(B4 - B3)) / (B4 + B3 + 0.5)', {
        'B4': image.select(['B4']),
        'B3': image.select(['B3']),
      }
    ).rename('SAVI'))};

var collection = collection.map(addSAVI);

var SAVI = collection.select(['SAVI']);
var SAVImed = SAVI.median();

//apply median focal filter
var SAVImed = SAVImed.focal_median(10);

// Create palettes for display of ARI
var SAVI_pal = ['#d73027', '#f46d43', '#fdae61', '#fee08b', '#d9ef8b',
'#a6d96a'];

// Display ARI results on map
Map.addLayer(SAVImed.clip(polygon), {min:-0.5, max:0.9, palette: SAVI_pal}, 'ARI');

// Export the image, specifying scale and region.
Export.image.toDrive({
image: SAVImed, //replace with your image name variable
description: 'sk_l5_SAVI_median_july_aug_focal10_100m',
scale: 100,
maxPixels: 1e12,
region: polygon, //polygon name that you have drawn at step 1
folder:'sk_l5_SAVI_median_july_aug_focal10_100m',
crs: "EPSG:26913"
});
