//update to be only july
//update so it is a moving average using multiyears
//to many empty pixels on a year by year basis

// See also: ClippedComposite, which crops the output image
// instead of filtering the input collection.

// Filter to only include images within a defined area.
var polygon = ee.Geometry.Polygon({
  coords: [[[-110.00, 49.00], [-110.00, 55.00], [-101.00, 55.00], [-101.00, 49.00]
  ]],
  geodesic: false
});

var polygon_sub = ee.Geometry.Polygon({
  coords: [[[-110.00, 49.00], [-110.00, 49.50], [-109.50, 49.50], [-109.50, 49.00]
  ]],
  geodesic: false
});

//Cloud Mask
/**
 * Function to mask clouds based on the pixel_qa band of Landsat SR data.
 * @param {ee.Image} image Input Landsat SR image
 * @return {ee.Image} Cloudmasked Landsat image
 */
var cloudMaskL457 = function(image) {
  var qa = image.select('QA_PIXEL');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};


//set dates
var start = '1984-01-01';
var endDate = ee.Date('2011-12-31');

// Create a Landsat 5 composites filter by
// the bounds of the FeatureCollection.
var collection = 
    ee.ImageCollection('LANDSAT/LT05/C02/T1_L2')
    .filter(ee.Filter.calendarRange(1984,2011,'year'))
    .filterBounds(polygon_sub)
    .map(cloudMaskL457)
    ;
    

// Function to calculate and add an NDVI band
var addNDVI = function(image) {
return image.addBands(image.normalizedDifference(['SR_B4', 'SR_B3']).rename('ndvi'));
};

var addNDI5 = function(image) {
return image.addBands(image.normalizedDifference(['SR_B4', 'SR_B5']).rename('NDI5'));
};

var addNDI7 = function(image) {
return image.addBands(image.normalizedDifference(['SR_B4', 'SR_B7']).rename('NDI7'));
};


var addNBR = function(image) {
return image.addBands(image.normalizedDifference(['SR_B5', 'SR_B7']).rename('nbr'));
};


var collection = collection.map(addNDVI);
var collection = collection.map(addNDI5);
var collection = collection.map(addNDI7);
var collection = collection.map(addNBR);


var NDVI = collection.select(['ndvi']);
var NDI5 = collection.select(['NDI5']);
var NDI7 = collection.select(['NDI7']);
var nbr = collection.select(['nbr']);


    
//resample to 300 m to speed processing
var NDVI = NDVI.map(function(image){
  return image.reproject({crs:"EPSG:26913", scale:200})});

var NDI5 = NDI5.map(function(image){
  return image.reproject({crs:"EPSG:26913", scale:200})});

var NDI7 = NDI7.map(function(image){
  return image.reproject({crs:"EPSG:26913", scale:200})});

var nbr = nbr.map(function(image){
  return image.reproject({crs:"EPSG:26913", scale:200})});

//time periods
var interval = 1;
var increment = 'month';

// make a list of start years
var startDate = ee.Date(start);
var secondDate = startDate.advance(interval, increment).millis();
var increase = secondDate.subtract(startDate.millis());
var list = ee.List.sequence(startDate.millis(), endDate.millis(), increase);

print(startDate);
print(list);

// make a composite (mean image) of the images monthly
var ndvi_composites = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = NDVI.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  // add the median to every image
  var meanImage = filtCol.median();
  return ee.Image(meanImage).set('system:time_start', ee.Date(startYear).millis());
}));

var NDI5_composites = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = NDI5.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  // add the median to every image
  var meanImage = filtCol.median();
  return ee.Image(meanImage).set('system:time_start', ee.Date(startYear).millis());
}));


var NDI7_composites = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = NDI7.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  // add the median to every image
  var meanImage = filtCol.median();
  return ee.Image(meanImage).set('system:time_start', ee.Date(startYear).millis());
}));


var nbr_composites = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = nbr.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  // add the median to every image
  var meanImage = filtCol.median();
  return ee.Image(meanImage).set('system:time_start', ee.Date(startYear).millis());
}));


print(ndvi_composites);
print(NDI5_composites);
print(NDI7_composites);
print(nbr_composites);


//export image collections
var ndvi_multiband=ndvi_composites.toBands();
var NDI5_multiband=NDI5_composites.toBands();
var NDI7_multiband=NDI7_composites.toBands();
var nbr_multiband=nbr_composites.toBands();


//export
Export.image.toDrive({
image: ndvi_multiband, //replace with your image name variable
description: 'ndvi_med_monthly_l5_49_50',
scale: 200,
maxPixels: 1e12,
region: polygon, //polygon name that you have drawn at step 1
folder:'ndvi_med_monthly_l5_49_50',
crs: "EPSG:26913"
});

Export.image.toDrive({
image: NDI5_multiband, //replace with your image name variable
description: 'NDI5_med_monthly_l5_49_50',
scale: 200,
maxPixels: 1e12,
region: polygon, //polygon name that you have drawn at step 1
folder:'NDI5_med_monthly_l5_49_50',
crs: "EPSG:26913"
});

Export.image.toDrive({
image: NDI7_multiband, //replace with your image name variable
description: 'NDI7_med_monthly_l5_49_50',
scale: 200,
maxPixels: 1e12,
region: polygon, //polygon name that you have drawn at step 1
folder:'NDI7_med_monthly_l5_49_50',
crs: "EPSG:26913"
});


Export.image.toDrive({
image: nbr_multiband, //replace with your image name variable
description: 'nbr_med_monthly_l5_49_50',
scale: 200,
maxPixels: 1e12,
region: polygon, //polygon name that you have drawn at step 1
folder:'nbr_med_monthly_l5_49_50',
crs: "EPSG:26913"
});



